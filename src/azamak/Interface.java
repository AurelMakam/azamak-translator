/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package azamak;

import azamak.tts.TextToSpeech;
import azamak.utils.Config;
import azamak.utils.StrUtils;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.List;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Caret;
import marytts.signalproc.effects.JetPilotEffect;
import marytts.signalproc.effects.LpcWhisperiserEffect;
import marytts.signalproc.effects.RobotiserEffect;
import marytts.signalproc.effects.StadiumEffect;
import marytts.signalproc.effects.VocalTractLinearScalerEffect;
import marytts.signalproc.effects.VolumeEffect;

/**
 *
 * @author Azamak
 */
public class Interface extends javax.swing.JFrame {

//    public Config confYemba;
//    public Config confBassa;
    public Config conf;
    public Config confTraduction;
    public Config confAjout;
    public static String fileToUpload = "";
    public static ArrayList<String> allWords;
    public Map<String, String> allWordsWithTraduction;
//    public Map<String, String> allBassaWords;
    public Map<String, String> allLanguages;

    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
        parcourirBtn.setEnabled(false);
        addWordBtn.setEnabled(false);
        panneauAdmin.setVisible(false);
        panneauTraduction.setVisible(true);
//        confYemba = new Config("francais-yemba.properties");
//        confBassa = new Config("francais-bassa.properties");
        conf = new Config("langues.properties");
        allLanguages = conf.loadAllIn();

        allLanguages.forEach((String key, String value) -> {
            comboLangue.addItem(key);
            choixLangueCmb.addItem(key);
        });

//        allYembaWords = confYemba.loadAllIn();
//        allBassaWords = confBassa.loadAllIn();
//        Set<String> set = new LinkedHashSet<>(allYembaWords.keySet());
//        set.addAll(allBassaWords.keySet());
//        allWords = new ArrayList<>(set);
        francaisTxtField.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (comboLangue.getSelectedIndex() != 0) {
                    translateTxtField.setText(StrUtils.translate(francaisTxtField.getText(), confTraduction));
                }
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                if (comboLangue.getSelectedIndex() != 0) {
                    translateTxtField.setText(StrUtils.translate(francaisTxtField.getText(), confTraduction));
                }

            }

            @Override
            public void changedUpdate(DocumentEvent arg0) {
                if (comboLangue.getSelectedIndex() != 0) {
                    translateTxtField.setText(StrUtils.translate(francaisTxtField.getText(), confTraduction));
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupmenu = new javax.swing.JPopupMenu();
        dialogAddLangue = new javax.swing.JDialog();
        jLabel10 = new javax.swing.JLabel();
        nomLangueTxf = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnParcourir = new javax.swing.JButton();
        cheminAddLangueTxf = new javax.swing.JTextField();
        btnAddLangue = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        panneauTraduction = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        francaisTxtField = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        translateTxtField = new javax.swing.JTextArea();
        BtnLire = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        volumeTranslate = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        comboLangue = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        panneauAdmin = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableMot = new javax.swing.JTable();
        BtnRetour = new javax.swing.JButton();
        choixLangueCmb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        motFrancais = new javax.swing.JTextField();
        motTraduit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fileToImportTxf = new javax.swing.JTextField();
        parcourirBtn = new javax.swing.JButton();
        addWordBtn = new javax.swing.JButton();
        importbtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jLabel10.setText("Nom Langue (sans espace)  :");

        nomLangueTxf.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Fichier de config.                      :");

        btnParcourir.setText("...");
        btnParcourir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParcourirActionPerformed(evt);
            }
        });

        cheminAddLangueTxf.setEditable(false);

        btnAddLangue.setText("Ajouter");
        btnAddLangue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLangueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogAddLangueLayout = new javax.swing.GroupLayout(dialogAddLangue.getContentPane());
        dialogAddLangue.getContentPane().setLayout(dialogAddLangueLayout);
        dialogAddLangueLayout.setHorizontalGroup(
            dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAddLangueLayout.createSequentialGroup()
                .addGroup(dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogAddLangueLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogAddLangueLayout.createSequentialGroup()
                                .addComponent(cheminAddLangueTxf, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnParcourir))
                            .addComponent(nomLangueTxf, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dialogAddLangueLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(btnAddLangue)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        dialogAddLangueLayout.setVerticalGroup(
            dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAddLangueLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomLangueTxf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogAddLangueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnParcourir)
                    .addComponent(cheminAddLangueTxf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddLangue)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setLayout(new java.awt.CardLayout());

        panneauTraduction.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("AZAMAK");

        jLabel9.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("( Votre traducteur multilingue)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Panneau de traduction"));

        francaisTxtField.setBackground(new java.awt.Color(255, 255, 255));
        francaisTxtField.setColumns(20);
        francaisTxtField.setForeground(new java.awt.Color(0, 0, 0));
        francaisTxtField.setRows(5);
        francaisTxtField.setToolTipText("Texte à traduire");
        francaisTxtField.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte en Français"));
        francaisTxtField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                francaisTxtFieldInputMethodTextChanged(evt);
            }
        });
        francaisTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                francaisTxtFieldKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(francaisTxtField);

        translateTxtField.setEditable(false);
        translateTxtField.setBackground(new java.awt.Color(255, 255, 255));
        translateTxtField.setColumns(20);
        translateTxtField.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        translateTxtField.setForeground(new java.awt.Color(0, 0, 0));
        translateTxtField.setRows(5);
        translateTxtField.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte traduit"));
        jScrollPane3.setViewportView(translateTxtField);

        BtnLire.setText("Lire...");
        BtnLire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLireActionPerformed(evt);
            }
        });

        jLabel2.setText("Texte en Français  :");

        volumeTranslate.setPaintLabels(true);
        volumeTranslate.setPaintTicks(true);
        volumeTranslate.setToolTipText("Volume");
        volumeTranslate.setValue(0);

        jLabel7.setText("Traduire en : ");

        comboLangue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- choisir la langue --" }));
        comboLangue.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboLangueItemStateChanged(evt);
            }
        });

        jLabel8.setText("Texte Traduit         :");

        jLabel12.setText("Volume...");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(BtnLire)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volumeTranslate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboLangue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(225, 225, 225))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboLangue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnLire)
                    .addComponent(volumeTranslate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panneauTraductionLayout = new javax.swing.GroupLayout(panneauTraduction);
        panneauTraduction.setLayout(panneauTraductionLayout);
        panneauTraductionLayout.setHorizontalGroup(
            panneauTraductionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panneauTraductionLayout.setVerticalGroup(
            panneauTraductionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauTraductionLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(panneauTraduction, "card2");

        tableMot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mot en français", "Mot traduit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableMot);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        BtnRetour.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        BtnRetour.setText("<< Retour");
        BtnRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRetourActionPerformed(evt);
            }
        });

        choixLangueCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sélectionner une langue" }));
        choixLangueCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choixLangueCmbItemStateChanged(evt);
            }
        });

        jLabel3.setText("Langue         :");

        jLabel4.setText("Mot(s) en français   : ");

        motFrancais.setBackground(new java.awt.Color(255, 255, 255));

        motTraduit.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Mot(s) traduit(s)  : ");

        jLabel6.setText("Charger un fichier  :");

        fileToImportTxf.setEditable(false);
        fileToImportTxf.setBackground(new java.awt.Color(204, 204, 204));

        parcourirBtn.setText("...");
        parcourirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcourirBtnActionPerformed(evt);
            }
        });

        addWordBtn.setText("Ajouter");
        addWordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordBtnActionPerformed(evt);
            }
        });

        importbtn.setText("importer");
        importbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panneauAdminLayout = new javax.swing.GroupLayout(panneauAdmin);
        panneauAdmin.setLayout(panneauAdminLayout);
        panneauAdminLayout.setHorizontalGroup(
            panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panneauAdminLayout.createSequentialGroup()
                        .addComponent(BtnRetour)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panneauAdminLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(choixLangueCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauAdminLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauAdminLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fileToImportTxf, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(parcourirBtn)
                        .addGap(18, 18, 18)
                        .addComponent(importbtn)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panneauAdminLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(motFrancais, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addWordBtn)
                            .addGroup(panneauAdminLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(motTraduit, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42))))
        );
        panneauAdminLayout.setVerticalGroup(
            panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panneauAdminLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choixLangueCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(motFrancais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(motTraduit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addWordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panneauAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fileToImportTxf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parcourirBtn)
                    .addComponent(importbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnRetour)
                .addGap(16, 16, 16))
        );

        jPanel4.add(panneauAdmin, "card3");

        jMenu1.setText("Fichier");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Nettoyer");
        jMenu1.add(jMenuItem1);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Fermer");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Administration");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("+ Ajout des mots");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("+ Ajouter une langue");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Aide");

        jMenuItem3.setText("Documentation");
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("A propos");
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 457, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLireActionPerformed
        // TODO add your handling code here:
        // lire en Yemba ŋ
        if (!"".equals(translateTxtField.getText())) {
            if (volumeTranslate.getValue() != 0) {
                BtnLire.setEnabled(false);
                readText(translateTxtField.getText(), volumeTranslate.getValue());
                BtnLire.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Bien vouloir augmenter le volume");
            }
        }


    }//GEN-LAST:event_BtnLireActionPerformed

    private void francaisTxtFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_francaisTxtFieldInputMethodTextChanged
        // TODO add your handling code here:
        translateTxtField.setText(StrUtils.translate(francaisTxtField.getText(), confTraduction));
    }//GEN-LAST:event_francaisTxtFieldInputMethodTextChanged

    private void readText(String text, int volume) {
        TextToSpeech tts = new TextToSpeech();
        //=========================================================================
        //======================= Print available AUDIO EFFECTS ====================
        //=========================================================================

        //Print all the available audio effects
//        tts.getAudioEffects().stream().forEach(audioEffect -> {
//            System.out.println("-----Name-----");
//            System.out.println(audioEffect.getName());
//            System.out.println("-----Examples-----");
//            System.out.println(audioEffect.getExampleParameters());
//            System.out.println("-----Help Text------");
//            System.out.println(audioEffect.getHelpText() + "\n\n");
//
//        });
        //=========================================================================
        //========================= Print available voices =========================
        //=========================================================================
        //Print all the available voices
        tts.getAvailableVoices().stream().forEach(voice -> System.out.println("Voice: " + voice));

        // Setting the Current Voice
        tts.setVoice("cmu-rms-hsmm");

        //=========================================================================
        //========================= Let's try different effects=====================
        //=========================================================================
        //----- Hey you !-> check the help that is being printed on the console
        //----- You will understand how to use the effects better :)
        //VocalTractLinearScalerEffect
//        VocalTractLinearScalerEffect vocalTractLSE = new VocalTractLinearScalerEffect(); //russian drunk effect
//        vocalTractLSE.setParams("amount:70");
//
//        //JetPilotEffect
//        JetPilotEffect jetPilotEffect = new JetPilotEffect(); //epic fun!!!
//        jetPilotEffect.setParams("amount:100");
//
//        //RobotiserEffect
//        RobotiserEffect robotiserEffect = new RobotiserEffect();
//        robotiserEffect.setParams("amount:50");
        //StadiumEffect
        StadiumEffect stadiumEffect = new StadiumEffect();
        stadiumEffect.setParams("amount:" + volume);

        //LpcWhisperiserEffect
//        LpcWhisperiserEffect lpcWhisperiserEffect = new LpcWhisperiserEffect(); //creepy
//        lpcWhisperiserEffect.setParams("amount:70");
//
//        //VolumeEffect
//        VolumeEffect volumeEffect = new VolumeEffect(); //be careful with this i almost got heart attack
//        volumeEffect.setParams("amount:0");
        //Apply the effects
        //----You can add multiple effects by using the method `getFullEffectAsString()` and + symbol to connect with the other effect that you want
        //----check the example below
        tts.getMarytts().setAudioEffects(stadiumEffect.getFullEffectAsString());// + "+" + stadiumEffect.getFullEffectAsString());

        //=========================================================================
        //===================== Now let's troll user ==============================
        //=========================================================================
        tts.speak(text, 2.0f, false, true);
    }
    private void BtnRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRetourActionPerformed
        // TODO add your handling code here:
        panneauAdmin.setVisible(false);
        panneauTraduction.setVisible(true);
    }//GEN-LAST:event_BtnRetourActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        panneauAdmin.setVisible(true);
        panneauTraduction.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed


    private void choixLangueCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choixLangueCmbItemStateChanged
        // TODO add your handling code here:
        Map<String, String> allData;
        Object item = choixLangueCmb.getSelectedItem();
        tableMot.removeAll();
        if (choixLangueCmb.getSelectedIndex() != 0) {
            confAjout = new Config("francais-" + item.toString().toLowerCase() + ".properties");
            allData = confAjout.loadAllIn();
            parcourirBtn.setEnabled(true);
            addWordBtn.setEnabled(true);
        } else {
            allData = new HashMap<>();
            parcourirBtn.setEnabled(false);
            addWordBtn.setEnabled(false);
        }
        DefaultTableModel model = (DefaultTableModel) tableMot.getModel();
        model.getDataVector().removeAllElements();
        Set keys = allData.keySet();
        Iterator iteratorKeys = keys.iterator();

        while (iteratorKeys.hasNext()) {
            String key = (String) iteratorKeys.next();
            //insert on first position by pushing down the existing rows
            //model.insertRow(0, new Object[]{key, allData.get(key)});
            //append at the end
            model.addRow(new Object[]{key, allData.get(key)});
        }
    }//GEN-LAST:event_choixLangueCmbItemStateChanged

    private void addWordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordBtnActionPerformed
        // TODO add your handling code here:

        Map<String, String> allData;
        String motFr = motFrancais.getText().toLowerCase();
        String motTr = motTraduit.getText().toLowerCase();
        if (choixLangueCmb.getSelectedIndex() != 0) {
            confAjout.setPropertyIn(motFr, motTr);
            allData = confAjout.loadAllIn();
        } else {
            allData = new HashMap<>();
        }
        DefaultTableModel model = (DefaultTableModel) tableMot.getModel();
        model.getDataVector().removeAllElements();
        Set keys = allData.keySet();
        Iterator iteratorKeys = keys.iterator();

        while (iteratorKeys.hasNext()) {
            String key = (String) iteratorKeys.next();
            //insert on first position by pushing down the existing rows
            model.insertRow(0, new Object[]{key, allData.get(key)});
            //append at the end
//            model.addRow(new Object[]{key, allData.get(key)});
        }
    }//GEN-LAST:event_addWordBtnActionPerformed

    private void importbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importbtnActionPerformed
        // TODO add your handling code here:
        if (!"".equals(fileToUpload)) {
            Map<String, String> allData = null;
            FileReader fr = null;
            try (BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fileToUpload), "UTF8"))) {
                System.out.println("selected = " + choixLangueCmb.getSelectedItem());
                String line;
                while ((line = br.readLine()) != null) {
                    String[] tab = line.split("=");
                    if (tab.length == 2) {
                        confAjout.setPropertyIn(tab[0], tab[1]);
                    } else {
                        System.out.println("ligne " + line + " ignorée");
                    }
                }
                br.close();    //closes the stream and release the resources 
                allData = confAjout.loadAllIn();
                DefaultTableModel model = (DefaultTableModel) tableMot.getModel();
                model.getDataVector().removeAllElements();
                Set keys = allData.keySet();
                Iterator iteratorKeys = keys.iterator();
                while (iteratorKeys.hasNext()) {
                    String key = (String) iteratorKeys.next();
                    model.insertRow(0, new Object[]{key, allData.get(key)});
                }
                JOptionPane.showMessageDialog(this, "Importation terminée !!!");
                fileToUpload = "";
                fileToImportTxf.setText("");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_importbtnActionPerformed

    private void parcourirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcourirBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Fichier texte", "txt");
        FileNameExtensionFilter filter2 = new FileNameExtensionFilter("Fichier properties", "properties");
        jfc.setFileFilter(filter);
        jfc.setFileFilter(filter2);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            fileToUpload = file.getAbsolutePath();
            fileToImportTxf.setText(fileToUpload);
        }
    }//GEN-LAST:event_parcourirBtnActionPerformed

    private void francaisTxtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_francaisTxtFieldKeyReleased
        // TODO add your handling code here:
//        String motEnCours = "";
        if (!"".equals(francaisTxtField.getText()) && !francaisTxtField.getText().endsWith(" ") && comboLangue.getSelectedIndex() != 0) {
            String[] tableauDesMots = francaisTxtField.getText().split(" ");
            String debutPhrase = "";
            for (int i = 0; i < tableauDesMots.length - 1; i++) {
                debutPhrase += tableauDesMots[i] + " ";
            }
            final String debut = debutPhrase;
            final String motEnCours = tableauDesMots[tableauDesMots.length - 1];
            if (motEnCours.length() >= 3) {
//                String[] obj = (String[]) allWords.stream()
//                        .filter(c -> c.startsWith(motEnCours))
//                        .collect(Collectors.toList()).toArray();
//                ArrayList<String> list = new ArrayList();
//                Collections.addAll(list, obj);
                popupmenu.removeAll();
                allWords.forEach((String s) -> {
                    if (s.startsWith(motEnCours)) {
                        JMenuItem item = new JMenuItem(s);
                        popupmenu.add(item);
                        item.addActionListener((ActionEvent e) -> {
                            francaisTxtField.setText(debut + e.getActionCommand());
                        });
                    }
                });
                if (popupmenu.getSubElements().length != 0) {
                    Caret caret = francaisTxtField.getCaret();
                    Point p = caret.getMagicCaretPosition();
                    popupmenu.show(francaisTxtField, (int) p.x, (int) p.y);
//                    popupmenu.requestFocus(false);
//                popupmenu.requestFocus();
//                popupmenu.grabFocus();
                }
            }
        }
    }//GEN-LAST:event_francaisTxtFieldKeyReleased

    private void comboLangueItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboLangueItemStateChanged
        // TODO add your handling code here:

        if (comboLangue.getSelectedIndex() != 0) {
            String langue = comboLangue.getSelectedItem().toString();
//                    evt.getItem().toString();
            // set all words*
            System.out.println("langue = " + langue);
            confTraduction = new Config("francais-" + langue + ".properties");
//            confTraduction.printAll();
            allWordsWithTraduction = confTraduction.loadAllIn();
            Set<String> set = new LinkedHashSet<>(allWordsWithTraduction.keySet());
            allWords = new ArrayList<>(set);
            if (francaisTxtField.getText() != "") {
                translateTxtField.setText(StrUtils.translate(francaisTxtField.getText(), confTraduction));
            }
        }
    }//GEN-LAST:event_comboLangueItemStateChanged

    private void btnParcourirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParcourirActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Fichier texte", "txt");
        FileNameExtensionFilter filter2 = new FileNameExtensionFilter("Fichier properties", "properties");
        jfc.setFileFilter(filter);
        jfc.setFileFilter(filter2);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            fileToUpload = file.getAbsolutePath();
            cheminAddLangueTxf.setText(fileToUpload);
        }
    }//GEN-LAST:event_btnParcourirActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:

        dialogAddLangue.setLocationRelativeTo(this);
//        dialogAddLangue.setAlwaysOnTop(true);
        dialogAddLangue.setSize(500, 200);
        dialogAddLangue.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void btnAddLangueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLangueActionPerformed
        // TODO add your handling code here:
        if (!"".equals(nomLangueTxf.getText()) && !"".equals(cheminAddLangueTxf.getText())) {
            if (allLanguages.containsKey(nomLangueTxf.getText().toLowerCase())) {
                JOptionPane.showMessageDialog(this, "Cette Langue existe déjà !!!");
            } else {
                OutputStream output = null;
                try {
                    conf.setPropertyIn(nomLangueTxf.getText().toLowerCase(), nomLangueTxf.getText().toLowerCase());
                    Properties props;
                    output = new FileOutputStream("francais-" + nomLangueTxf.getText().toLowerCase() + ".properties");
                    try (InputStream in = new FileInputStream("francais-" + nomLangueTxf.getText().toLowerCase() + ".properties")) {
                        props = new Properties();
                        props.load(new InputStreamReader(in, "UTF-8"));
                        Properties p = new Properties();
                        p.load(new InputStreamReader(new FileInputStream(cheminAddLangueTxf.getText()), "UTF-8"));
                        p.forEach((Object key, Object value) -> {
                            props.setProperty((String) key, (String) value);
                        });
                        props.store(output, null);
                        output.close();
                        JOptionPane.showMessageDialog(this, "Nouvelle langue ajoutée avec succès !!!");
                    } catch (IOException ex) {
                        Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        output.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        }
    }//GEN-LAST:event_btnAddLangueActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLire;
    private javax.swing.JButton BtnRetour;
    private javax.swing.JButton addWordBtn;
    private javax.swing.JButton btnAddLangue;
    private javax.swing.JButton btnParcourir;
    private javax.swing.JTextField cheminAddLangueTxf;
    private javax.swing.JComboBox<String> choixLangueCmb;
    private javax.swing.JComboBox<String> comboLangue;
    private javax.swing.JDialog dialogAddLangue;
    private javax.swing.JTextField fileToImportTxf;
    private javax.swing.JTextArea francaisTxtField;
    private javax.swing.JButton importbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField motFrancais;
    private javax.swing.JTextField motTraduit;
    private javax.swing.JTextField nomLangueTxf;
    private javax.swing.JPanel panneauAdmin;
    private javax.swing.JPanel panneauTraduction;
    private javax.swing.JButton parcourirBtn;
    private javax.swing.JPopupMenu popupmenu;
    private javax.swing.JTable tableMot;
    private javax.swing.JTextArea translateTxtField;
    private javax.swing.JSlider volumeTranslate;
    // End of variables declaration//GEN-END:variables
}
